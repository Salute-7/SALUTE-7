import os
import json
import sqlite3
import disnake
import math
import random
import asyncio
from datetime import datetime, timedelta
from utils.base.colors import colors
from disnake.ext import commands

bot = commands.InteractionBot(intents=disnake.Intents.all())

def load_base():
    config_path = os.path.join('utils/cache/configs', f'main.json')
    if os.path.exists(config_path):
        with open(config_path, 'r') as config_file:
            return json.load(config_file)

def load_config(guild_id):
    config_path = os.path.join('utils/cache/configs', f'{guild_id}.json')
    if os.path.exists(config_path):
        with open(config_path, 'r') as config_file:
            return json.load(config_file)
        try:
            with open(config_file, 'r') as f:
                return json.load(f)
        except FileNotFoundError:
            return {}
    return None

def create_embed(title, description, color):
    embed = disnake.Embed(title=title, description=description, color=color)
    return embed

def get_color_from_config(settings):
    color_choice = settings.get('COLOR', 'orange')
    return colors.get(color_choice.lower(), disnake.Color.orange())

base = load_base()

user_data = {}

class User:
    def __init__(self):
        self.last_reward_time = None  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã
        self.balance = 0  # –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    def can_receive_reward(self):
        if self.last_reward_time is None:
            return True
        return datetime.now() - self.last_reward_time >= timedelta(seconds=1)

    def receive_reward(self, job):
        if self.can_receive_reward():
            if job == "—Ç–∞–∫—Å–∏—Å—Ç–æ–º":
                reward_amount = random.randint(10000, 99000)
            elif job == "–ø–∏–ª–æ—Ç–æ–º":
                reward_amount = random.randint(200000, 350000)
            elif job == "–∫—É—Ä—å–µ—Ä–æ–º":
                reward_amount = random.randint(20000, 75000)
            elif job == "—É—á—ë–Ω—ã–º":
                reward_amount = random.randint(450000, 950000)
            elif job == "–∫–∞–ø–∏—Ç–∞–Ω–æ–º —Å—É–¥–Ω–∞":
                reward_amount = random.randint(120000, 450000)
            elif job == "–Ω–∞ –Ω–µ—Ñ—Ç–µ–±–∞–∑–µ":
                reward_amount = random.randint(175000, 350000)
            elif job == "–¥–∞–ª—å–Ω–æ–±–æ–π—â–∏–∫–æ–º":
                reward_amount = random.randint(150000, 300000)
            elif job == "–∞–≤—Ç–æ–º–µ—Ö–∞–Ω–∏–∫–æ–º":
                reward_amount = random.randint(80000, 170000)
            self.balance += reward_amount
            self.last_reward_time = datetime.now()
            return reward_amount
        else:
            return None

    def receive_penalty(self, job):
        if job == "—Ç–∞–∫—Å–∏—Å—Ç–æ–º":
            penalty = random.randint(3000, 8000)
        elif job == "–ø–∏–ª–æ—Ç–æ–º":
            penalty = random.randint(10000, 45000)
        elif job == "–∫—É—Ä—å–µ—Ä–æ–º":
            penalty = random.randint(2000, 7000)
        elif job == "—É—á—ë–Ω—ã–º":
            penalty = random.randint(100000, 250000)
        elif job == "–∫–∞–ø–∏—Ç–∞–Ω–æ–º —Å—É–¥–Ω–∞":
            penalty = random.randint(50000, 100000)
        elif job == "–Ω–∞ –Ω–µ—Ñ—Ç–µ–±–∞–∑–µ":
            penalty = random.randint(40000, 80000)
        elif job == "–¥–∞–ª—å–Ω–æ–±–æ–π—â–∏–∫–æ–º":
            penalty = random.randint(10000, 45000)
        elif job == "–∞–≤—Ç–æ–º–µ—Ö–∞–Ω–∏–∫–æ–º":
            penalty = random.randint(8000, 34000)       
        if self.balance >= penalty:
            self.balance -= penalty
            return penalty
        else:
            return 0  # –ï—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, —à—Ç—Ä–∞—Ñ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è


class reward(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.user_data = {}
        print('–§–∞–π–ª Commands/Economy/reward.py –ó–∞–≥—Ä—É–∂–µ–Ω!')

    @commands.slash_command(name="reward", description="–ü–æ–ª—É—á–∏—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É –∑–∞ —Ä–∞–±–æ—Ç—É —Ä–∞–∑ –≤ —á–∞—Å. (üåé)")
    async def reward(self, interaction: disnake.ApplicationCommandInteraction):
        user_id = interaction.user.id
        guild_id = interaction.guild.id
        settings = load_config(guild_id)  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≥–¥–µ-—Ç–æ –≤ –≤–∞—à–µ–º –∫–æ–¥–µ
        connection = sqlite3.connect(f'utils/cache/database/{guild_id}.db')
        cursor = connection.cursor()
        chosen_color = get_color_from_config(settings)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

        if user_id not in self.user_data:
            self.user_data[user_id] = User()

        user = self.user_data[user_id]

        # –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä —Ä–∞–±–æ—Ç—ã
        kosyak = random.choice(["–ø—Ä–µ–≤—ã—à–∞–µ—Ç–µ —Å–≤–æ–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è.", "–∑–∞–±—ã–≤–∞–µ—Ç–µ –æ—Ç–º–µ—Ç–∏—Ç—å—Å—è –≤ –∂—É—Ä–Ω–∞–ª–µ.", "–≤—ã—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Ä–∞–±–æ—Ç—É c –æ–ø–æ–∑–¥–∞–Ω–∏–µ–º.", "–≤—ã—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Ä–∞–±–æ—Ç—É –ø—å—è–Ω—ã–º.", "—Ç–µ—Ä—è–µ—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—É–ø—é—Ä.", "–∑–∞—Å—ã–ø–∞–µ—Ç–µ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ.", "–∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç–µ —Å –Ω–∞—á–∞–ª—å–Ω–∏–∫–æ–º."])
        job = random.choice(["—Ç–∞–∫—Å–∏—Å—Ç–æ–º", "–ø–∏–ª–æ—Ç–æ–º", "–∫—É—Ä—å–µ—Ä–æ–º", "—É—á—ë–Ω—ã–º", "–∫–∞–ø–∏—Ç–∞–Ω–æ–º —Å—É–¥–Ω–∞", "–Ω–∞ –Ω–µ—Ñ—Ç–µ–±–∞–∑–µ", "–¥–∞–ª—å–Ω–æ–±–æ–π—â–∏–∫–æ–º", "–∞–≤—Ç–æ–º–µ—Ö–∞–Ω–∏–∫–æ–º"])
        reward_amount = user.receive_reward(job)
        penalty = user.receive_penalty(job)

        itog = (reward_amount - penalty) if reward_amount is not None else 0

        formatted_reward_amount = f"{itog:,}".replace(',', '.')
        formatted_reward = f"{reward_amount:,}".replace(',', '.') if reward_amount is not None else "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É"
        formatted_penalty = f"{penalty:,}".replace(',', '.')

        next_reward_time = user.last_reward_time + timedelta(seconds=1)# –î–æ–±–∞–≤–ª—è–µ–º 1 —á–∞—Å
        formatted_next_reward_time = next_reward_time.strftime("%H:%M:%S") # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è

        if reward_amount is not None:
            try:
                cursor.execute("UPDATE users SET cash = cash + ? WHERE id = ?", (reward_amount, user_id))
                connection.commit()

                cursor.execute("SELECT cash FROM users WHERE id = ?", (user_id,))
                balance_info = cursor.fetchone()

                if balance_info is not None:
                    balance = balance_info[0]
                    formatted_balance = f"{balance:,}".replace(',', '.')
                else:
                    formatted_balance = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"

                embed = disnake.Embed(
                    title=f"",
                    description=(
                        f"–í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ {job}, –Ω–æ {kosyak}\n"
                        f"–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ {formatted_next_reward_time}."
                    ),
                    color=chosen_color
                )
                embed.add_field(name="–ü–æ–ª—É—á–µ–Ω–æ:", value=f"```{formatted_reward_amount}‚ÇΩ```", inline=True)
                embed.add_field(name="–£—Ç–µ—Ä—è–Ω–æ:", value=f"```{formatted_penalty}‚ÇΩ```", inline=True)                
                embed.add_field(name="–ò—Ç–æ–≥:", value=f"```{formatted_balance}‚ÇΩ```", inline=True)
                # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–±–æ—Ç—ã
                if job == "—Ç–∞–∫—Å–∏—Å—Ç–æ–º":
                    car_image_url = 'https://avatars.dzeninfra.ru/get-zen_doc/168279/pub_5cef7a2ae927bd00ae01a529_5cef8b9c1cd66200af7a458f/scale_1200'
                    embed.set_image(url=car_image_url)
                elif job == "–ø–∏–ª–æ—Ç–æ–º":
                    plane_image_url = 'https://i.pinimg.com/originals/53/52/57/535257b9fe97c87c077751a38704ba0e.jpg'  
                    embed.set_image(url=plane_image_url)
                elif job == "–∫—É—Ä—å–µ—Ä–æ–º":
                    plane_image_url = 'https://s0.rbk.ru/v6_top_pics/media/img/2/39/347129397912392.webp' 
                    embed.set_image(url=plane_image_url)
                elif job == "—É—á—ë–Ω—ã–º":
                    plane_image_url = 'https://nenadzor.ru/img/news/kabelnaya-prohodka-v-atomnoj-otrasli-2.jpg'  
                    embed.set_image(url=plane_image_url)
                elif job == "–∫–∞–ø–∏—Ç–∞–Ω–æ–º —Å—É–¥–Ω–∞":
                    plane_image_url = 'https://i.pinimg.com/originals/ef/42/7c/ef427cec68961663c7d7a9c2e061919f.jpg'  
                    embed.set_image(url=plane_image_url)
                elif job == "–Ω–∞ –Ω–µ—Ñ—Ç–µ–±–∞–∑–µ":
                    plane_image_url = 'https://www.marsalis.ee/wp-content/uploads/2016/10/metall_bg.jpg'  
                    embed.set_image(url=plane_image_url)
                elif job == "–¥–∞–ª—å–Ω–æ–±–æ–π—â–∏–∫–æ–º":
                    plane_image_url = 'https://akvilon-leasing.ru/upload/iblock/3ba/3baffda321df6080c033aec98121d6f6.jpg'
                    embed.set_image(url=plane_image_url)
                elif job == "–∞–≤—Ç–æ–º–µ—Ö–∞–Ω–∏–∫–æ–º":
                    plane_image_url = 'https://avatars.mds.yandex.net/get-altay/4442047/2a00000178ad80465c98b781717df018f30b/orig' 
                    embed.set_image(url=plane_image_url)
                await interaction.send(embed=embed)

            except sqlite3.Error as e:
                await interaction.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")
                print(f"Database error: {e}")

        else:    
            embed = disnake.Embed(
                title="–ó–∞—Ä–ø–ª–∞—Ç–∞ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–∞!",
                description=f"–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –∑–∞—Ä–ø–ª–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –≤ `{formatted_next_reward_time}.`",
                color=chosen_color)
            await interaction.send(embed=embed, ephemeral=True)
            return

        connection.close()
 