import os
import json
import sqlite3
import disnake
from utils.base.colors import colors
from disnake.ext import commands

bot = commands.InteractionBot(intents=disnake.Intents.all())

def load_config(guild_id):
    config_path = os.path.join('utils/cache/configs', f'{guild_id}.json')
    if os.path.exists(config_path):
        with open(config_path, 'r') as config_file:
            return json.load(config_file)
        try:
            with open(config_file, 'r') as f:
                return json.load(f)
        except FileNotFoundError:
            return {}
    return None

def get_color_from_config(settings):
    color_choice = settings.get('COLOR', 'orange')
    return colors.get(color_choice.lower(), disnake.Color.orange())

class top_balance(commands.Cog):
    def __init__(self, bot):  
        self.bot = bot
        print('–§–∞–π–ª Commands/Statistica/top_balance.py –ó–∞–≥—Ä—É–∂–µ–Ω!')

    @bot.slash_command(name="top_balance", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø 10 –ø–æ –±–∞–ª–∞–Ω—Å—É (üåé)")
    async def top_balance(self, ctx):
        await ctx.response.defer()  # –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç

        guild_id = ctx.guild.id
        settings = load_config(guild_id)  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è load_config
        chosen_color = get_color_from_config(settings)  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è get_color_from_config

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        connection = sqlite3.connect(f'utils/cache/database/{guild_id}.db')
        cursor = connection.cursor()

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –±–∞–ª–∞–Ω—Å—É
        cursor.execute("SELECT id, cash FROM users WHERE cash >= 1 ORDER BY cash DESC LIMIT 10")
        top_players = cursor.fetchall()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if not top_players:
            await ctx.edit_original_response(content="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
            return

        embed = disnake.Embed(title="–¢–û–ü-10 —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", color=chosen_color)
        for i, player in enumerate(top_players):
            user_id = player[0]
            try:
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
                user = await ctx.guild.fetch_member(user_id)
                # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                mention = f"{user.display_name}" if user else ""
            except (disnake.NotFound, disnake.HTTPException):
                # –ü—Ä–æ–ø—É—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                continue
            
            formatted_cash = f"{int(player[1]):,}".replace(',', '.')

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã purchases
            cursor.execute("SELECT car_name, car_image_url FROM purchases WHERE user_id = ? ORDER BY purchase_price DESC", (user.id,))
            car_info = cursor.fetchone()

            cursor.execute("SELECT home_name, home_image_url FROM home WHERE user_id = ? ORDER BY home_price DESC", (user.id,))
            home_info = cursor.fetchone()

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute("SELECT home_name, home_info FROM home WHERE user_id = ?", (user.id,))
            home_info = cursor.fetchone()

            car_details = ""
            if car_info:
                car_name = car_info[0]
                cursor.execute("SELECT COUNT(*) FROM purchases WHERE user_id = ? AND car_name IS NOT NULL", (user.id,))
                additional_cars = cursor.fetchone()[0]
                additional_cars_text = f" (+{additional_cars - 1})" if additional_cars > 1 else ""
                car_details = f"| {car_name}{additional_cars_text}"

            home_details = ""
            if home_info:
                home_name = home_info[0]
                home_infos = home_info[1]
                cursor.execute("SELECT COUNT(*) FROM home WHERE user_id = ? AND home_name IS NOT NULL", (user.id,))
                additional_home = cursor.fetchone()[0]
                additional_home_text = f" (+{additional_home - 1})" if additional_home > 1 else ""
                home_details = f"| {home_name}, {home_infos} {additional_home_text}"

            if i == 0:  
                embed.set_thumbnail(url=user.avatar.url)

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —ç–º–±–µ–¥
            embed.add_field(
                name=f"{i + 1}. {user.display_name} ({user.name})",
                value=f"{formatted_cash}‚ÇΩ {car_details} {home_details}",
                inline=False
            )

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è
        await ctx.edit_original_response(embed=embed)

        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        connection.close()